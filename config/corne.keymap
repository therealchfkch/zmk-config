/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NUMBERS 1
#define SYMBOLS 2
#define FNS     3

&mt {
        tapping-term-ms = <300>;
};
&lt {
        tapping-term-ms = <300>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T   |                        |  Z  |  U   |  I  |  O  |  P  |  '   |
// | CTRL |  A  |  S  |  D  |  F  |  G   |                        |  H  |  J   |  K  |  L  |  ;  |  -   |
// | SHFT |  Y  |  X  |  C  |  V  |  B   |                        |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | FNS | SPC | NUM BSPC |                    | TAB | ENT  | ALT |  
                        bindings = <
   &kp ESC   &kp Q      &kp W      &kp E        &kp R       &kp T    &kp Z &kp U  &kp I     &kp O   &kp P    &kp SQT
   &kp LCTRL &mt LGUI A &mt LALT S &mt LSHIFT D &mt LCTRL F &kp G    &kp H &mt LCTRL J  &mt LSHIFT K     &mt LALT L   &mt LGUI SEMI &kp MINUS
   &kp LSHFT &kp Y      &kp X      &kp C        &kp V &kp B          &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &mo FNS &kp SPACE &lt NUMBERS BSPC                 &lt SYMBOLS TAB &kp RET &kp LALT
                        >;
                };
                number_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  {  |  }  | "|" |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// |  :   |  ?  |  $  |  (  |  )  |  #  |   |  -  |  <  |  >  |  =  |  \  |  `   |
// | SHFT |  &  |  %  |  [  |  ]  |  ~  |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    |     |     |     |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL  &kp AT     &kp LBRC &kp RBRC &kp PIPE     &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR &kp BSPC
   &kp COLON &kp QMARK &kp DLLR   &kp LPAR &kp RPAR &kp HASH     &kp MINUS &kp LT    &kp GT          &kp EQUAL &kp BSLH &kp GRAVE
   &kp LSHFT &kp AMPS  &kp PRCNT  &kp LBKT &kp RBKT &kp TILDE    &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC  &kp PIPE &kp TILDE
                                  &trans   &trans   &trans       &kp RET   &trans    &kp RALT
                        >;
                };

                fn_layer {
// -----------------------------------------------------------------------------------------
// |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |                 |  F7  |  F8  |  F9  |  F10  |  F11  |  F12  | 
                        bindings = <
   &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6               &kp F7  &kp F8  &kp F9  &kp F10 &kp F11 &kp F12
   &trans  &trans  &trans  &trans  &trans  &trans               &trans  &trans  &trans  &trans  &trans  &trans
   &trans  &trans  &trans  &trans  &trans  &trans               &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &trans               &trans  &trans  &trans
                        >;
                };
        };
};
